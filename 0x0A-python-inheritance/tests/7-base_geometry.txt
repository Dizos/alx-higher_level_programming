The ``7-base_geometry`` module
==============================

Using ``BaseGeometry``
----------------------

First, let's import the class:

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Now, let's create an instance of BaseGeometry:

    >>> bg = BaseGeometry()

Test area() method:

    >>> bg.area()
    Traceback (most recent call last):
    ...
    Exception: area() is not implemented

Test integer_validator() method with valid inputs:

    >>> bg.integer_validator("my_int", 12)
    >>> bg.integer_validator("width", 89)

Test integer_validator() method with invalid inputs:

    >>> bg.integer_validator("name", "John")
    Traceback (most recent call last):
    ...
    TypeError: name must be an integer

    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
    ...
    ValueError: age must be greater than 0

    >>> bg.integer_validator("distance", -4)
    Traceback (most recent call last):
    ...
    ValueError: distance must be greater than 0

Test integer_validator() method with other invalid types:

    >>> bg.integer_validator("float", 3.14)
    Traceback (most recent call last):
    ...
    TypeError: float must be an integer

    >>> bg.integer_validator("bool", True)
    Traceback (most recent call last):
    ...
    TypeError: bool must be an integer

    >>> bg.integer_validator("list", [1, 2, 3])
    Traceback (most recent call last):
    ...
    TypeError: list must be an integer

Test integer_validator() method with missing arguments:

    >>> bg.integer_validator()
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    >>> bg.integer_validator("age")
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'
